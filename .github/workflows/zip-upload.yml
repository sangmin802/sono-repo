name: zip artifact upload

on: workflow_dispatch
    
env:
  APPLICATION_PATH: apps/lostark-hands-next/.next/

jobs:
  # job name
  Node_test:
    runs-on: ubuntu-latest

    # 명시된 모든 버전에 대해 해당 job을 실행, 테스트를 진행.
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # 현재 리포지토리로 진입(깃 브랜치 checkout)
    - uses: actions/checkout@v4
    
    # 노드환경 설치(위의 전략에 설정해준 버전 배열이 각각 job을 수행하면서 환경변수로 전달됨)
    - name: use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: use pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.14.1

    - name: install dependencies
      run: pnpm install
          
    - name: set env & build
      env: 
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_API_KEY: ${{ secrets.NEXT_PUBLIC_API_KEY }}
        NEXT_PUBLIC_CDN_URL: ${{ secrets.NEXT_PUBLIC_CDN_URL }}
        TURBO_TEAM: ${{secrets.TURBO_TEAM}}
        TURBO_TOKEN: ${{secrets.TURBO_TOKEN}}
      run: pnpm lostark:build

    - name: Install zip
      run: sudo apt-get update && sudo apt-get install -y zip

    - name: Create a zip file with timestamp
      run: |
        cd ${{ env.APPLICATION_PATH }}
        zip -r "lostark-hands-next.zip" ./*
        ls -al

    - name: Upload lostark-hands-next artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload
      with:
        name: lostark-hands-next.zip build artifact
        path: ${{ env.APPLICATION_PATH }}/lostark-hands-next.zip

    - name: Send Success Result to Slack
      uses: slackapi/slack-github-action@v1.25.0
      with:
        payload: |
          {
            "channel": "상민테스트",
            "username": "Github Actions",
            "attachments": [
              {
                "pretext": "✅ Dev 아티팩트 생성",
                "title": "information",
                "text": "아티팩트 URL: `${{ steps.artifact-upload.outputs.artifact-url }}`",
                "color": "#2EB67D"
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK